services:
  utechleague24.backend.api:
    image: utechleague24.backend.api
    build:
      context: .
      dockerfile: UTechLeague24.Backend.Api/Dockerfile
    depends_on:
      mongo-db:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__MongoDbConnection=mongodb://root:example@mongo:27017

  mongo-db:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on:
      mongo-db:
        condition: service_healthy
    ports:
      - "27018:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo

volumes:
  mongo-data: